
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// so i'm struggling on how to increment i in the appropriate way, right now i start with some number, 1, and i want to add the previous value of i to it

// var fib = function() {
//   var sum = 0
//   for (var i = 1; i < 10; i){
//   sum += i
//   // i = sum
//   console.log(sum)
//   }

// };

// fib()
// // i caved and looked at an answer, one problem i had was confusing i for the fib number and the position of the number that im on. for example the 7th number is 8



// var fib = function(limit){

//   var x = 1;
//   var y = 2;
//   var z = 0;
//   var sum = 0;

//   while (x < limit) {
//     if(x % 2 === 0) {
//       sum += x;
//     }
//   z = x + y;
//   x = y;
//   y = z;
//   }
//  console.log("final sum: "sum);
// };

// fib(4000000)
//---------------------------------------------

var fibo = function(limit) {
  var x = 1;
  var y = 2;
  var z = 0;
  var sum = 0;
  while (x < limit) {
    if(x % 2 === 0) {
      sum += x;
    }
    z = x + y;
    x = y;
    y = z;
  }
  console.log(sum);
}

fibo(4000000)

// 0 1 1 2 3 5 8 13 21
//             x  z
//                y
// sum = 10

// 0 1 1 2 3 5 8 13 21
//           x z
//             y
// sum = 2

// 0 1 1 2 3 5 8 13 21
//         x z
//           y
// sum = 2

// 0 1 1 2 3 5 8 13 21
//       x z
//         y
// sum = 2

// 0 1 1 2 3 5 8 13 21
//       x z
//         y
// sum = 0

// 0 1 1 2 3 5 8 13 21
// z   x y
//
// sum = 0
